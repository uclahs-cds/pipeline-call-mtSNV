//Metadata
manifest {
    name = "call-mtSNV"
    author = "Takafumi Yamaguchi & Alfredo Enrique Gonzalez "
    description = "Pipeline for calling mitochonrdial SNVs"
    version = "1.0"
}

//Enabling Docker
docker {
    enabled = true
    sudo = true
}

// Global default params, used in configs

params {
    // sample inputs
    sample_name = "Test_001"
    input_csv = "/hot/users/agonzalez/002_Nextflowization_mtSNV/01_Version_1.0/01_pipeline/input.csv"

    // input/output locations
    output_dir = "/hot/users/agonzalez/002_Nextflowization_mtSNV/01_Version_1.0/03_outputs/temp"
    temp_dir = "/hot/users/agonzalez/002_Nextflowization_mtSNV/01_Version_1.0/03_outputs/temp"
    bamql_out_dir = "/hot/users/agonzalez/002_Nextflowization_mtSNV/01_Version_1.0/03_outputs/01_bamql/"
    mtoolbox_out_dir = "/hot/users/agonzalez/002_Nextflowization_mtSNV/01_Version_1.0/03_outputs/02_mtoolbox/"
    mitocaller_out_dir = "/hot/users/agonzalez/002_Nextflowization_mtSNV/01_Version_1.0/03_outputs/03_mitocaller/"
    haplotype_out_dir = "/hot/users/agonzalez/002_Nextflowization_mtSNV/01_Version_1.0/03_outputs/04_haplotype/"

    // References
    mt_ref = "/hot/users/tyamaguchi/docker/mt/mitochondria-ref/chrRSRS.fasta"
    mito_ref = '/hot/users/tyamaguchi/docker/mt/mitochondria-ref'

    // options
    save_intermediate_files = false
    cache_intermediate_pipeline_steps = true

    // resource configuraton for entire pipeline
    max_number_of_parallel_jobs = 1

    //queries
    query = "(chr(M) & mate_chr(M)) | (chr(Y) & after(59000000) & mate_chr(M))"

}

// location of Nextflow temp directories  
workDir = params.temp_dir
NXF_WORK = params.temp_dir
NXF_TEMP = params.temp_dir
NXF_HOME = params.temp_dir


process {
    // monitor process jobs with local (not slurm) executor
    executor = "local"

    // total amount of resources avaible to the pipeline
    maxForks = params.max_number_of_parallel_jobs

    // echo stdout of each step to stdout of pipeline
    echo = true
    cache = params.cache_intermediate_pipeline_steps

}

// pipeline monitoring and metric files
timeline {
    enabled = true
    file = "${params.output_dir}/timeline.html"
}

trace {
    enabled = true
    file = "${params.output_dir}/trace.txt"
}

report {
    enabled = true
    file = "${params.output_dir}/report.html"
}
