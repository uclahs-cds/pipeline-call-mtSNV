import nextflow.util.SysHelper

methods {
    set_date = {
        def tz = TimeZone.getTimeZone("UTC")
        def date = new Date().format("yyyyMMdd'T'HHmmss'Z'", tz)

        params.date = "${date}"
        }

    set_ids_from_csv = {
        def sample

        def reader = new FileReader(params.input_csv)
        reader.splitEachLine(',') { parts -> [sample = parts[1]] }
        
        params.sample_id = "${sample}"
        }
    
    set_output_dir = { 
        params.base_output_dir = "${params.output_dir}/${manifest.name}-${manifest.version}/${params.sample_id}/${params.mitocaller_version}/" 
        params.nextflow_log_dir = "${params.output_dir}/${manifest.name}-${manifest.version}/${params.sample_id}/log-${manifest.name}-${manifest.version}-$date/"
        paramslog_output_dir = "${nextflow_log_dir}/process-log/"
        }


    set_pipeline_logs = {
        timeline.enabled = true
        timeline.file = "${params.nextflow_log_dir}/nextflow-log/timeline.html"

        trace.enabled = true
        trace.file = "${params.nextflow_log_dir}/nextflow-log/trace.txt"

        report.enabled = true
        report.file =  "${params.nextflow_log_dir}/nextflow-log/report.html"
        }

    setup = {
        methods.set_date()
        methods.set_ids_from_csv()
        methods.set_output_dir()
        methods.set_pipeline_logs()
        }
    }



