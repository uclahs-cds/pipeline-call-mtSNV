///// methods invocation ///////
import nextflow.util.SysHelper

methods {
    set_date = {
        def date = new Date().format('yyyyMMdd-HHmmss')
        params.date = "${date}"
    }
    setup = {
        methods.set_date()
        }
}

methods.setup()


///// docker ////////
docker {
    enabled = true
    sudo = true
    
    // Pass user's UID/GID and group IDs to Docker
    uid_and_gid = "-u \$(id -u):\$(id -g)"
    all_group_ids = "\$(for i in `id --real --groups`; do echo -n \"--group-add=\$i \"; done)"

    runOptions = "${uid_and_gid} ${all_group_ids}"
    }


///// pipeline monitoring and metric files ////////
timeline {
    enabled = true
    file = "${params.output_dir}/${params.run_name}_${params.date}/timeline.html"
}

trace {
    enabled = true
    file = "${params.output_dir}/${params.run_name}_${params.date}/trace.txt"
}

report {
    enabled = true
    file = "${params.output_dir}/${params.run_name}_${params.date}/report.html"
}


////////////// process info /////////////
process {
    // monitor process jobs with local (not slurm) executor
    executor = "local"

    // total amount of resources avaible to the pipeline
    maxForks = params.max_number_of_parallel_jobs

    // echo stdout of each step to stdout of pipeline
    echo = true
    cache = params.cache_intermediate_pipeline_steps
}


//////////// location of Nextflow temp directories /////////
workDir = params.temp_dir
NXF_WORK = params.temp_dir
NXF_TEMP = params.temp_dir
NXF_HOME = params.temp_dir
