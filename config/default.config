import nextflow.util.SysHelper

params { 
    max_cpus   = SysHelper.getAvailCpus()
    max_memory = SysHelper.getAvailMemory()

    ucla_cds = true

    docker_container_registry = "ghcr.io/uclahs-cds"
    
    // tools and their versions
    pipeval_version = "2.1.5"
    bamql_version = "1.6.1"
    mtoolbox_version = "1.2.1-b52269e"
    mitocaller_version = "1.0.0"
    mitoCaller2vcf_version = "1.0.0"
    call_heteroplasmy_version = "1.0.1"

    validate_docker_image = "${-> params.docker_container_registry}/validate:${pipeval_version}"
    BAMQL_docker_image = "${-> params.docker_container_registry}/bamql:${params.bamql_version}"
    MToolBox_docker_image = "${-> params.docker_container_registry}/mtoolbox:${params.mtoolbox_version}"
    mitocaller_docker_image = "${-> params.docker_container_registry}/mitocaller:${params.mitocaller_version}"
    mitoCaller2vcf_docker_image = "${-> params.docker_container_registry}/mitocaller2vcf:${params.mitoCaller2vcf_version}"
    heteroplasmy_script_docker_image = "${-> params.docker_container_registry}/call-heteroplasmy-script:${params.call_heteroplasmy_version}"

    }

process {
    cache = true
    executor = "local"
    echo = true
    }

docker {
    enabled = true
    // Pass user's UID/GID and group IDs to Docker
    uid_and_gid = "-u \$(id -u):\$(id -g)"
    all_group_ids = "\$(for i in `id --real --groups`; do echo -n \"--group-add=\$i \"; done)"

    runOptions = "${uid_and_gid} ${all_group_ids}"
    }
