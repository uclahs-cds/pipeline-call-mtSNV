import nextflow.util.SysHelper

params {
    //default settings for optional params
    save_intermediate_files = false
    cache_intermediate_pipeline_steps = false

    max_cpus   = SysHelper.getAvailCpus()
    max_memory = SysHelper.getAvailMemory()

    min_cpus = 1
    min_memory = 1.MB

    ucla_cds = true

    // Picard DownsampleSam defaults
    downsample_mtoolbox_bam = false // options: [true, false]
    downsample_seed=1
    downsample_index=true
    downsample_validation_stringency='LENIENT'

    docker_container_registry = "ghcr.io/uclahs-cds"

    // tools and their versions
    pipeval_version = "5.0.0-rc.3"
    bamql_version = "1.6.1"
    samtools_version = "1.21"
    mtoolbox_version = "1.2.1-b52269e"
    picard_version = "3.3.0"
    mitocaller_version = "1.0.0"
    mitoCaller2vcf_version = "1.0.0"
    call_heteroplasmy_version = "1.1.0"

    BAMQL_docker_image = "${-> params.docker_container_registry}/bamql:${params.bamql_version}"
    SAMtools_docker_image = "${-> params.docker_container_registry}/samtools:${params.samtools_version}"
    MToolBox_docker_image = "${-> params.docker_container_registry}/mtoolbox:${params.mtoolbox_version}"
    mitocaller_docker_image = "${-> params.docker_container_registry}/mitocaller:${params.mitocaller_version}"
    picard_docker_image = "${-> params.docker_container_registry}/picard:${params.picard_version}"
    mitoCaller2vcf_docker_image = "${-> params.docker_container_registry}/mitocaller2vcf:${params.mitoCaller2vcf_version}"
    heteroplasmy_script_docker_image = "${-> params.docker_container_registry}/call-heteroplasmy:${params.call_heteroplasmy_version}"

    }

process {
    cache = true
    executor = "local"
    echo = true
    }

docker {
    enabled = true
    // Pass user's UID/GID and group IDs to Docker
    uid_and_gid = "-u \$(id -u):\$(id -g)"
    all_group_ids = "\$(for i in `id --real --groups`; do echo -n \"--group-add=\$i \"; done)"

    runOptions = "${uid_and_gid} ${all_group_ids}"
    }
