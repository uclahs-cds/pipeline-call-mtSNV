//Metadata
manifest {
    name = "call-mtSNV"
    author = "Takafumi Yamaguchi; Nextflowization by Alfredo Enrique Gonzalez "
    description = "Pipeline for calling mitochonrdial SNVs"
    version = "1.0"
}

//Enabling Docker
docker {
    enabled = true
    runOptions = "-u \$(id -u):\$(id -g)" 
}


// Global default params, used in configs

params {
    // sample inputs
    input_csv = "**---user_input---**"

    // input/output locations
    output_dir = "**---user_input---**"
    temp_dir = "/**---user_input---**"
    bamql_out_dir = "**---user_input---**"
    mtoolbox_out_dir = "**---user_input---**"
    mitocaller_out_dir = "**---user_input---**"
    haplotype_out_dir = "**---user_input---**"

    // References
    mt_ref = "/data/users/tyamaguchi/docker/mt/mitochondria-ref/chrRSRS.fasta"
    mito_ref = '/data/users/tyamaguchi/docker/mt/mitochondria-ref'
    mitocaller = '/data/users/agonzalez/002_Nextflowization_mtSNV/01_Version_1.0/02_docker/mitocaller/mitoCaller-package/mitoCaller/bin'
    heteroplasmy_script = '/data/users/agonzalez/002_Nextflowization_mtSNV/01_Version_1.0/02_docker/call_heteroplasmy/'                                                                                                              


    // options
    save_intermediate_files = false
    cache_intermediate_pipeline_steps = true

    // resource configuraton for entire pipeline
    max_number_of_parallel_jobs = 1


}

// location of Nextflow temp directories  
workDir = params.temp_dir
NXF_WORK = params.temp_dir
NXF_TEMP = params.temp_dir
NXF_HOME = params.temp_dir


process {
    // monitor process jobs with local (not slurm) executor
    executor = "local"

    // total amount of resources avaible to the pipeline
    maxForks = params.max_number_of_parallel_jobs

    // echo stdout of each step to stdout of pipeline
    echo = true
    cache = params.cache_intermediate_pipeline_steps

}

// pipeline monitoring and metric files
timeline {
    enabled = true
    file = "${params.output_dir}/timeline.html"
}

trace {
    enabled = true
    file = "${params.output_dir}/trace.txt"
}

report {
    enabled = true
    file = "${params.output_dir}/report.html"
}
